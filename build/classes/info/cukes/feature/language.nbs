#
# NBS Template for FEATURE
#
# Author: Roland Guem
#
# HINT: Package name is a homage to Cucumber Developers
#

# Token Definitions

# Comments
TOKEN:comment:('#' [^ '\n' '\r']*)

TOKEN:basic_scenario:("Scenario"):<BASIC_SCENARIO>
TOKEN:table_scenario:("Scenario Outline"):<TABLE_SCENARIO>
TOKEN:background:("Background"):<BACKGROUND>

<BACKGROUND> {
    TOKEN:whitespace:( [" " "\t"]+ ) # "\n" "\r"
    TOKEN:start_background_block:(":"):<IN_BACKGROUND_TEXT>
    TOKEN:given:( "Given" ):<IN_BACKGROUND_TEXT>
    TOKEN:and:( "And" ):<IN_BACKGROUND_TEXT>
    TOKEN:start_row_block:('|'):<IN_BACKGROUND_TABLE>
    TOKEN:pystring:('\"\"\"'):<B_PYSTRING_BLOCK>
    TOKEN:end_background: ('\n'):<DEFAULT>
}

<IN_BACKGROUND_TEXT> {
    TOKEN:end_text: ('\n'):<BACKGROUND>

    TOKEN:whitespace:( [" " "\t"]+ ) # "\n" "\r"
    TOKEN:string:(('\''[^ '\'']* '\'')|('\"'[^ '\"']* '\"'))
    TOKEN:variable:('<'[^ '>']* '>')
    TOKEN:number:( ["0"-"9"]+ ("."["0"-"9"]*)? )
    TOKEN:comment:('#' [^ '\n' '\r']*)
    TOKEN:word:( [^ '\n' '\r' '\t' ' ' '\'' '\"' '<' '>' '#']* )
}

<BASIC_SCENARIO> {
    TOKEN:start_description:(':'):<IN_BSC_DESCRIPTION_BLOCK>
    TOKEN:end_scenario: ('\n'):<DEFAULT>
    TOKEN:whitespace:( [" " "\t"]+ ) # "\n" "\r"
    TOKEN:given:( "Given" ):<IN_BASIC_SCENARIO_TEXT>
    TOKEN:and:( "And" ):<IN_BASIC_SCENARIO_TEXT>
    TOKEN:when:( "When" ):<IN_BASIC_SCENARIO_TEXT>
    TOKEN:then:( "Then" ):<IN_BASIC_SCENARIO_TEXT>
    TOKEN:start_row_block:('|'):<IN_MINI_BSC_ROW_BLOCK>
    TOKEN:pystring:('\"\"\"'):<BSC_PYSTRING_BLOCK>
}

<IN_BSC_DESCRIPTION_BLOCK> {
    TOKEN:end_desc: ('\n'):<BASIC_SCENARIO>

    TOKEN:whitespace:( [" " "\t"]+ ) # "\n" "\r"
    TOKEN:comment:('#' [^ '\n' '\r']*)
    TOKEN:word:( [^ '\n' '\r' '\t' ' ' '\'' '\"' '<' '>' '#']* )
}

<IN_BASIC_SCENARIO_TEXT> {
    TOKEN:end_text: ('\n'):<BASIC_SCENARIO>

    TOKEN:whitespace:( [" " "\t"]+ ) # "\n" "\r"
    TOKEN:string:(('\''[^ '\'']* '\'')|('\"'[^ '\"']* '\"'))
    TOKEN:variable:('<'[^ '>']* '>')
    TOKEN:number:( ["0"-"9"]+ ("."["0"-"9"]*)? )
    TOKEN:comment:('#' [^ '\n' '\r']*)
    TOKEN:word:( [^ '\n' '\r' '\t' ' ' '\'' '\"' '<' '>' '#']* )
}


<TABLE_SCENARIO> {
    TOKEN:start_description:(':'):<IN_TSC_DESCRIPTION_BLOCK>

    TOKEN:tsc_newline:( '\n' )
    TOKEN:whitespace:( [" " "\t"]+ ) # "\n" "\r"
    TOKEN:examples:( 'Examples' ):<EXAMPLES>
    TOKEN:given:( 'Given' ):<IN_TABLE_SCENARIO_TEXT>
    TOKEN:and:( 'And' ):<IN_TABLE_SCENARIO_TEXT>
    TOKEN:when:( 'When' ):<IN_TABLE_SCENARIO_TEXT>
    TOKEN:then:( 'Then' ):<IN_TABLE_SCENARIO_TEXT>
    TOKEN:start_row_block:('|'):<IN_MINI_TSC_ROW_BLOCK>
    TOKEN:pystring:('\"\"\"'):<TSC_PYSTRING_BLOCK>
}

<IN_TSC_DESCRIPTION_BLOCK> {
    TOKEN:end_desc: ('\n'):<TABLE_SCENARIO>

    TOKEN:whitespace:( [" " "\t"]+ ) # "\n" "\r"
    TOKEN:comment:('#' [^ '\n' '\r']*)
    TOKEN:word:( [^ '\n' '\r' '\t' ' ' '\'' '\"' '<' '>' '#']* )
}

<IN_TABLE_SCENARIO_TEXT> {
    TOKEN:end_text: ('\n'):<TABLE_SCENARIO>

    TOKEN:whitespace:( [" " "\t"]+ ) # "\n" "\r"
    TOKEN:string:(('\''[^ '\'']* '\'')|('\"'[^ '\"']* '\"'))
    TOKEN:variable:('<'[^ '>']* '>')
    TOKEN:number:( ["0"-"9"]+ ("."["0"-"9"]*)? )
    TOKEN:comment:('#' [^ '\n' '\r']*)
    TOKEN:word:( [^ '\n' '\r' '\t' ' ' '\'' '\"' '<' '>' '#']* )
}

<EXAMPLES> {
    #TOKEN:start_examples_block:(":")
    TOKEN:whitespace:( [" " "\t"]+ ) # "\n" "\r"
    TOKEN:start_examples_block:(":"):<IN_EXAMPLES_TEXT>
    TOKEN:start_row_block:("|"):<IN_ROW_BLOCK>
    TOKEN:end_scenario: ('\n'):<DEFAULT>
}
<IN_EXAMPLES_TEXT> {
    TOKEN:end_text: ('\n'):<EXAMPLES>

    TOKEN:whitespace:( [" " "\t"]+ ) # "\n" "\r"
    TOKEN:string:(('\''[^ '\'']* '\'')|('\"'[^ '\"']* '\"'))
    TOKEN:variable:('<'[^ '>']* '>')
    TOKEN:number:( ["0"-"9"]+ ("."["0"-"9"]*)? )
    TOKEN:comment:('#' [^ '\n' '\r']*)
    TOKEN:word:( [^ '\n' '\r' '\t' ' ' '\'' '\"' '<' '>' '#']* )
}

<IN_MINI_BSC_ROW_BLOCK> {
    TOKEN:end_row: ('\n'):<BASIC_SCENARIO>

    TOKEN:whitespace:( [" " "\t"]+ ) # "\n" "\r"
    TOKEN:string:(('\''[^ '\'']* '\'')|('\"'[^ '\"']* '\"'))
    TOKEN:number:( '-'? ["0"-"9"]+ ("."["0"-"9"]*)? )
    TOKEN:special:(["|"]*)
    TOKEN:comment:('#' [^ '\n' '\r']*)
    TOKEN:word:( [^ '\n' '\r' '\t' ' ' '\'' '\"' '<' '>' '#' '|' ]* )
}

<IN_MINI_TSC_ROW_BLOCK> {
    TOKEN:end_row: ('\n'):<TABLE_SCENARIO>

    TOKEN:whitespace:( [" " "\t"]+ ) # "\n" "\r"
    TOKEN:string:(('\''[^ '\'']* '\'')|('\"'[^ '\"']* '\"'))
    TOKEN:number:( '-'? ["0"-"9"]+ ("."["0"-"9"]*)? )
    TOKEN:special:(["|"]*)
    TOKEN:comment:('#' [^ '\n' '\r']*)
    TOKEN:word:( [^ '\n' '\r' '\t' ' ' '\'' '\"' '<' '>' '#' '|' ]* )
}

<IN_BACKGROUND_TABLE> {
    TOKEN:end_row: ('\n'):<BACKGROUND>

    TOKEN:whitespace:( [" " "\t"]+ ) # "\n" "\r"
    TOKEN:string:(('\''[^ '\'']* '\'')|('\"'[^ '\"']* '\"'))
    TOKEN:number:( '-'? ["0"-"9"]+ ("."["0"-"9"]*)? )
    TOKEN:special:(["|"]*)
    TOKEN:comment:('#' [^ '\n' '\r']*)
    TOKEN:word:( [^ '\n' '\r' '\t' ' ' '\'' '\"' '<' '>' '#' '|' ]* )
}


<IN_ROW_BLOCK> {
     TOKEN:whitespace:( [" " "\t"]+ ) # "\n" "\r"
     TOKEN:end_row: ('\n'):<EXAMPLES>
     TOKEN:string:(('\''[^ '\'']* '\'')|('\"'[^ '\"']* '\"'))
     TOKEN:number:( '-'? ["0"-"9"]+ ("."["0"-"9"]*)? )
     TOKEN:special:(["|"]*)
     TOKEN:comment:('#' [^ '\n' '\r']*)
     TOKEN:word:( [^ '\n' '\r' '\t' ' ' '\'' '\"' '<' '>' '#' '|' ]* )
}

# Text Block (using different tokens inside text block)
TOKEN:start_text_block:(':'):<IN_TEXT_BLOCK>
<IN_TEXT_BLOCK> {
     TOKEN:whitespace:( [" " "\t"]+ ) # "\n" "\r"
     TOKEN:end_text: ('\n'):<DEFAULT>
     TOKEN:string:(('\''[^ '\'']* '\'')|('\"'[^ '\"']* '\"'))
     TOKEN:variable:('<'[^ '>']* '>')
     TOKEN:number:( ["0"-"9"]+ ("."["0"-"9"]*)? )
     TOKEN:comment:('#' [^ '\n' '\r']*)
     TOKEN:word:( [^ '\n' '\r' '\t' ' ' '\'' '\"' '<' '>' '#']* )
     #TOKEN:text_block:([^ '\n' '\r']*):<DEFAULT>
}

<B_PYSTRING_BLOCK> {
     TOKEN:newline: ('\n')
     TOKEN:whitespace:( [" " "\t"]+ ) # "\n" "\r"
     TOKEN:variable:('<'[^ '>']* '>')
     TOKEN:word:( [^ '\n' '\r' '\t' ' ' '\'' '\"' '<' '>' '#']* )
     TOKEN:end_pystring:('\"\"\"'):<BACKGROUND>
}

<BSC_PYSTRING_BLOCK> {
     TOKEN:newline: ('\n')
     TOKEN:whitespace:( [" " "\t"]+ ) # "\n" "\r"
     TOKEN:variable:('<'[^ '>']* '>')
     TOKEN:word:( [^ '\n' '\r' '\t' ' ' '\'' '\"' '<' '>' '#']* )
     TOKEN:end_pystring:('\"\"\"'):<BASIC_SCENARIO>
}

<TSC_PYSTRING_BLOCK> {
     TOKEN:newline: ('\n')
     TOKEN:whitespace:( [" " "\t"]+ ) # "\n" "\r"
     TOKEN:variable:('<'[^ '>']* '>')
     TOKEN:word:( [^ '\n' '\r' '\t' ' ' '\'' '\"' '<' '>' '#']* )
     TOKEN:end_pystring:('\"\"\"'):<TABLE_SCENARIO>
}

TOKEN:feature:( "Feature" )
#TOKEN:basic_scenario:( "Scenario" )
#TOKEN:table_scenario:( "Scenario Outline" )
TOKEN:business_value:( "In order to" ):<IN_TEXT_BLOCK>
TOKEN:role:( "As a" | "As an" ):<IN_TEXT_BLOCK>
TOKEN:some_action:( "I want to" ):<IN_TEXT_BLOCK>

TOKEN:word:( [^ '\n' '\r' '\t' ' ' '\'' '\"' '<' '>' '#' ':' '@']* )
TOKEN:tag:('@' [^ ' ' '\t']*)

TOKEN:whitespace:( [" " "\t"]+ ) # "\n" "\r"

TOKEN:newline: ('\n')

#Syntax Definition

S = (Feature)*;

# Comment
#Comment = <comment>;
# NewLine
#NewLine = <newline>;

# Feature
Feature = FeatureDefinition Background* (Scenario)*;
FeatureDefinition = FeatureIdentifier FeatureDescription FeatureBlock;
FeatureIdentifier = <feature>;
FeatureDescription = <start_text_block> Text;
# Feature Block
FeatureBlock = BusinessValueDefinition RoleDefinition SomeActionDefinition;
# Business Value
BusinessValueDefinition = <business_value> Text;
# Role Defintion
RoleDefinition = <role> Text;
# Some Action
SomeActionDefinition = <some_action> Text;

# Background
Background = BackgroundIdentifier BackgroundDescription BackgroundBlock;
BackgroundIdentifier = <background>;
BackgroundDescription = <start_background_block> [Text];
BackgroundBlock = [GivenBlock];

# Scenario
Scenario = (BasicScenario) | (TableScenario);
BasicScenario = ScenarioIdentifier ScenarioDescription ScenarioBlock;
ScenarioIdentifier = <basic_scenario>;
TableScenario = TableScenarioIdentifier ScenarioDescription ScenarioBlock ExamplesBlock;
TableScenarioIdentifier = <table_scenario>;
ScenarioDescription = <start_description> Text;
# Scenario Block
ScenarioBlock = [GivenBlock] [WhenBlock] [ThenBlock];
# Given
GivenBlock = GivenDefinition [Extras] (AndDefinition)*;
GivenDefinition = <given> Text;
# When
WhenBlock = WhenDefinition (AndDefinition)*;
WhenDefinition = <when> Text;
# Then
ThenBlock = ThenDefinition (AndDefinition)*;
ThenDefinition = <then> Text;
# And
AndDefinition = <and> Text [Extras];

#Extras
Extras = PyString | ExamplesBlock;

# TableBlock
ExamplesBlock = ExamplesIdentifier ExamplesDescription ExamplesBlock;
ExamplesIdentifier = <examples>;
ExamplesDescription = <start_examples_block> [Text];
ExamplesBlock = TableHeader (TableRow)*;
TableHeader = <start_row_block> Text;
TableRow = <start_row_block> Text;

PyString = <pystring> Text <end_pystring>;

# Text
Text = (Word | <string> | <variable>) (Text)*;
Word = <word> | <number> | <special> ;

SKIP:whitespace
SKIP:comment
SKIP:newline
SKIP:tag
SKIP:tsc_newline
SKIP:end_text
SKIP:end_desc
SKIP:end_row
SKIP:end_background
SKIP:end_scenario

# ------------------------------------------------------------------------------

COLOR:comment: {
    default_coloring: "identifier";
    foreground_color:"#8F8F8F";
}

COLOR:tag: {
    default_coloring: "identifier";
    foreground_color:"#CC3333";
    font_type: "bold";
}

# COLOR FOR FEATURE ------------------------------------------------------------

COLOR:feature: {
    default_coloring: "identifier";
    foreground_color:"#3366CC";
    font_type: "bold italic";
}

COLOR:business_value: {
    default_coloring: "identifier";
    foreground_color:"#3366CC";
    font_type: "bold italic";
}

COLOR:role: {
    default_coloring: "identifier";
    foreground_color:"#3366CC";
    font_type: "bold italic";
}

COLOR:some_action: {
    default_coloring: "identifier";
    foreground_color:"#3366CC";
    font_type: "bold italic";
}

COLOR:FeatureDescription: {
    font_type: "bold";
}

COLOR:BusinessValueDefinition: {
    font_type: "bold";
}

COLOR:RoleDefinition: {
    font_type: "bold";
}

COLOR:SomeActionDefinition: {
    font_type: "bold";
}

# COLOR FOR SCENARIO -----------------------------------------------------------

COLOR:basic_scenario: {
    default_coloring: "identifier";
    foreground_color:"#3366CC";
    font_type: "bold italic";
}

COLOR:table_scenario: {
    default_coloring: "identifier";
    foreground_color:"#3366CC";
    font_type: "bold italic";
}

COLOR:ScenarioDescription: {
    font_type: "bold";
}

COLOR:TableHeader: {
    default_coloring: "identifier";
    foreground_color:"#336600";
}

COLOR:examples: {
    default_coloring: "identifier";
    foreground_color:"#336600";
    font_type: "bold italic";
}

# COLOR FOR BACKGROUND ---------------------------------------------------------

COLOR:background: {
    default_coloring: "identifier";
    foreground_color:"#336600";
    font_type: "bold italic";
}

# Multiline String -------------------------------------------------------------

COLOR:PyString: {
    default_coloring: "identifier";
    foreground_color:"#663333";
}

# COLOR FOR GIVEN/WHEN/THEN & AND ----------------------------------------------

COLOR:given: {
    default_coloring: "identifier";
    foreground_color:"#3366CC";
}

COLOR:when: {
    default_coloring: "identifier";
    foreground_color:"#3366CC";
}
COLOR:then: {
    default_coloring: "identifier";
    foreground_color:"#3366CC";
}

COLOR:and: {
    default_coloring: "identifier";
    foreground_color:"#3366CC";
}

# ------------------------------------------------------------------------------

COLOR:variable: {
    default_coloring:"string";
    foreground_color:"#336600";
}

COLOR:number: {
    default_coloring:"string";
    #foreground_color:"#80CC33";
    foreground_color:"#8FD600";
}

# COMPLETE ---------------------------------------------------------------------
# brace completion
COMPLETE "{:}"
COMPLETE "(:)"
COMPLETE "[:]"
COMPLETE "\":\""
COMPLETE "\':\'"

# COMPLETION -------------------------------------------------------------------
# code completion
COMPLETION:given, when, then, and, scenario, feature, whitespace, newline: {
    text1:"Feature:";
    text2:"In order to";
    text3:"As a";
    text4:"I want to";
    text5:"Scenario:";
    text6:"Given";
    text7:"And";
    text8:"When";
    text9:"Then";
    text10:"Examples:";
    text11:"Background:";
    text12:"Scenario Outline:";
}

# BRACE ------------------------------------------------------------------------
# brace matching
BRACE "{:}"
BRACE "(:)"
BRACE "[:]"
BRACE "\":\""
BRACE "\':\'"

# NAVIGATOR --------------------------------------------------------------------
# navigator

NAVIGATOR:Feature: {
    display_name: info.cukes.feature.Feature.featureName;
    icon: info.cukes.feature.Feature.featureIcon;
}

NAVIGATOR:Scenario: {
    display_name: info.cukes.feature.Feature.scenarioName;
    icon: info.cukes.feature.Feature.scenarioIcon;
}

NAVIGATOR:TableBlock: {
    display_name: "Examples";
    icon: info.cukes.feature.Feature.examplesIcon;
}

NAVIGATOR:Background: {
    display_name: info.cukes.feature.Feature.backgroundName;
    icon: info.cukes.feature.Feature.backgroundIcon;
}

# INDENT -----------------------------------------------------------------------
# indentation
INDENT "Feature:.*"
#INDENT "Scenario:\\n\\n"
#INDENT "Background:<end_background>"

# TOOLTIP ----------------------------------------------------------------------
#TOOLTIP:Feature:"Feature"
#TOOLTIP:Scenario:"Scenario"
#TOOLTIP:BusinessValueDefinition:"What is the Business Value of this Feature?"
#TOOLTIP:RoleDefinition:"Who are you or the person running this Scenarios?"
#TOOLTIP:SomeActionDefintion:"What do you do to reach this Goal?"

# FOLD -------------------------------------------------------------------------

FOLD:FeatureBlock
FOLD:BackgroundBlock
FOLD:ScenarioBlock
FOLD:ExamplesBlock

# EOF --------------------------------------------------------------------------
