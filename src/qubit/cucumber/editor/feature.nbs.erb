# NBS Language File for Gherkin (Feature)
#
# Author: Roland Guem
# I18N-Support: Aslak Hellesoy
#
# HINT: THE "feature.nbs" FILE IS AUTOGENRATED BY THE RAKE TASK "i18n_generate"
# Generated on: <%= Time.now %>
#
# TOKEN DEFINTIONS -------------------------------------------------------------
# COMMENT
TOKEN:comment:('#' [^ '\n' '\r']*)
# COLON
TOKEN:colon:(":"):<TEXT_MODE>
# ROW DELIMITER
TOKEN:row_delimiter:("|"):<ROW_MODE>
# MULTILINE STRING
TOKEN:pystring:('\"\"\"'):<PYSTRING_MODE>
# INFINITE
TOKEN:infinite:("*"):<STEPS_TEXT_MODE>
# STRING
TOKEN:string:((" \'"[^ "\'"]* "\'")|("\""[^ "\""]* "\""))
# VARIABLE
#TOKEN:variable:('<'[^ '>']* '>')

TOKEN:feature:(<%= gherkin_keywords(:feature) %>):<FEATURE_NARRATIVE>

TOKEN:background:(<%= gherkin_keywords(:background) %>)

TOKEN:scenario:(<%= gherkin_keywords(:scenario) %>)

TOKEN:scenario_outline:(<%= gherkin_keywords(:scenario_outline) %>)

TOKEN:examples:(<%= gherkin_keywords(:examples) %>):<EXAMPLES_MODE>

TOKEN:step:(<%= gherkin_keywords(:step) %>):<STEPS_TEXT_MODE>

TOKEN:text:( [^ '\n' '\r' '\t' ' ' '\"' '<' '>' '|' '#' ':' '@']* )
TOKEN:tag:('@' [^ ' ' '\t' '\n' '\r']*)
TOKEN:whitespace:( [" " "\t"]+ ) # "\n" "\r"
TOKEN:newline: ('\n')

# TEXT -------------------------------------------------------------------------
<FEATURE_NARRATIVE> {
    TOKEN:colon:(':')
    TOKEN:newline:('\n'):<CHECK_DOUBLE_NL>
    TOKEN:whitespace:( [" " "\t"]+ )
    TOKEN:comment:('#' [^ '\n' '\r']*)
    TOKEN:text:( [^ ':' '\n' '\r' '\t' '#']* )
}
# FORCE DOUBLE NL AFTER FEATURE NARRATIVE
<CHECK_DOUBLE_NL> {
    TOKEN:newline:('\n'):<DEFAULT>
    TOKEN:whitespace:( [" " "\t"]+ )
    TOKEN:comment:('#' [^ '\n' '\r']*)
    TOKEN:text:([^'\n']*):<FEATURE_NARRATIVE>
}
# Examples
<EXAMPLES_MODE> {
    TOKEN:colon:(':'):<EXAMPLES_TEXT_MODE>
}
<EXAMPLES_TEXT_MODE> {
    TOKEN:row_delimiter:('|'):<ROW_MODE>
    TOKEN:newline:('\n')
    TOKEN:whitespace:( [" " "\t"]+ )
    TOKEN:comment:('#' [^ '\n' '\r']*)
    TOKEN:text:([^'|' '\n' '#']*)
}
# Text
<TEXT_MODE> {
    TOKEN:newline:('\n'):<DEFAULT>
    TOKEN:whitespace:( [" " "\t"]+ )
    TOKEN:comment:('#' [^ '\n' '\r']*)
    TOKEN:text:( [^ '\n' '\r' '\t' '#']* )
}

# STEPSTEXT --------------------------------------------------------------------
# Text inside Steps
<STEPS_TEXT_MODE> {
    TOKEN:newline:('\n'):<DEFAULT>
    TOKEN:whitespace:( [" " "\t"]+ )
    TOKEN:string:((" \'"[^ "\'"]* "\'")|("\""[^ "\""]* "\""))
    TOKEN:variable:('<'[^ '>']* '>')
    TOKEN:number:( ["0"-"9"]+ (("."|",")["0"-"9"]*)? )
    TOKEN:comment:('#' [^ '\n' '\r']*)
    TOKEN:text:( [^ '\n' '\r' '\t' ' ' '\"' '<' '>' '#']* )
}

# PYSTRING ---------------------------------------------------------------------
# Multiline String
<PYSTRING_MODE> {
    TOKEN:end_pystring:('\"\"\"'):<DEFAULT>
    TOKEN:newline: ('\n')
    TOKEN:whitespace:( [" " "\t"]+ )
    TOKEN:variable:('<'[^ '>']* '>')
    TOKEN:text:( [^ '\n' '\r' '\t' ' ' '<' '>']* )
}

# ROW --------------------------------------------------------------------------
# Row
<ROW_MODE> {
    TOKEN:end: ('\n'):<DEFAULT>
    TOKEN:row_delimiter:("|")
    TOKEN:whitespace:( [" " "\t"]+ )
    TOKEN:string:((" \'"[^ "\'"]* "\'")|("\""[^ "\""]* "\""))
    TOKEN:comment:('#' [^ '\n' '\r']*)
    TOKEN:number:( ["0"-"9"]+ (("."|",")["0"-"9"]*)? )
    TOKEN:text:( [^ '\n' '\r' '\t' ' ' '\"' '|' '#']* )
}
#
# GRAMMER RULES :: SYNTAX DEFINITION -------------------------------------------
#
# 0..1 Features are in one File (restrict to 1)
S = [Feature];
# Feature
Feature = FeatureDefinition BackgroundPart ScenarioPart;
BackgroundPart = (Background)*;
ScenarioPart = (Scenario)*;
FeatureDefinition = <feature> <colon> [FeatureDescription];
FeatureDescription = Text;
# Background
Background = <background> <colon> [Description] [BackgroundBlock];

# a Background has only Given Statments
BackgroundBlock = (Statements)*;
# Scenario
Scenario = BasicScenario | TableScenario;
BasicScenario = <scenario> <colon> [ScenarioDescription] ScenarioBlock;
TableScenario = <scenario_outline> <colon> [ScenarioDescription] ScenarioBlock ExamplesBlocks;
ScenarioDescription = Text;
ScenarioBlock = (Statements)*;
Statements = StatementIdentfier Statement;
StatementIdentfier = (<infinite> | <step>);
Statement = Text [Extras];
#Extras
Extras = PyString | TableBlock;
# Examples and Tables
ExamplesBlocks = ExamplesBlock (ExamplesBlock)*;
ExamplesBlock = <examples> <colon> [Description] TableBlock;
Description = Text;
TableBlock = TableHeader TableRows;
TableHeader = Row;
TableRows = (Row)*;
Row = <row_delimiter> ([Text] <row_delimiter>)+ <end>;
#
PyString = <pystring> Text <end_pystring>;
# Text
Text = (<text> | <number> | <string> | <variable>) (Text)*;
#
SKIP:whitespace
SKIP:comment
SKIP:newline
SKIP:tag
# ------------------------------------------------------------------------------
#
COLOR:comment: {
    default_coloring: "identifier";
    foreground_color:"#8F8F8F";
}
COLOR:tag: {
    default_coloring: "identifier";
    foreground_color:"#CC3333";
    font_type: "bold";
}
#
# COLOR FOR FEATURE ------------------------------------------------------------
#
COLOR:feature: {
    default_coloring: "identifier";
    foreground_color: "#3366CC";
    font_type: "bold italic";
}
COLOR:FeatureDescription: {
    font_type: "bold";
}
#
# COLOR FOR SCENARIO -----------------------------------------------------------
#
COLOR:scenario: {
    default_coloring: "identifier";
    foreground_color: "#3366CC";
    font_type: "bold italic";
}
COLOR:scenario_outline: {
    default_coloring: "identifier";
    foreground_color: "#3366CC";
    font_type: "bold italic";
}
COLOR:ScenarioDescription: {
    font_type: "bold";
}
COLOR:TableHeader: {
    default_coloring: "identifier";
    foreground_color:"#336600";
    font_type: "bold";
}
COLOR:examples: {
    default_coloring: "identifier";
    foreground_color: "#336600";
    font_type: "bold italic";
}
#
# COLOR FOR BACKGROUND ---------------------------------------------------------
#
COLOR:background: {
    default_coloring: "identifier";
    foreground_color: "#336600";
    font_type: "bold italic";
}
#
# Multiline String -------------------------------------------------------------
#
COLOR:PyString: {
    default_coloring: "identifier";
    foreground_color: "#663333";
}
#
# COLOR FOR GIVEN/WHEN/THEN & AND/BUT ------------------------------------------
#
COLOR:step: {
    default_coloring: "identifier";
    foreground_color: "#3366CC";
}
#
# ------------------------------------------------------------------------------
#
COLOR:variable: {
    default_coloring: "string";
    foreground_color: "#336600";
}
#
COLOR:number: {
    default_coloring: "string";
    foreground_color: "#336600";
}
#
COLOR:string: {
    default_coloring: "string";
    foreground_color: "#FF9900";
}
#
# COMPLETE ---------------------------------------------------------------------
# brace completion
COMPLETE "{:}"
COMPLETE "(:)"
COMPLETE "[:]"
COMPLETE "\":\""
COMPLETE "\':\'"

# COMPLETION -------------------------------------------------------------------
# code completion
#COMPLETION:given, when, then, and, scenario, feature, whitespace, newline: {
#    text1:"Feature:";
#    text2:"In order to";
#    text3:"As a";
#    text4:"I want to";
#    text5:"Scenario:";
#    text6:"Given";
#    text7:"And";
#    text8:"When";
#    text9:"Then";
#    text10:"But";
#    text11:"Examples:";
#    text12:"Background:";
#    text13:"Scenario Outline:";
#}

# BRACE ------------------------------------------------------------------------
# brace matching
BRACE "{:}"
BRACE "(:)"
BRACE "[:]"
BRACE "\":\""
BRACE "\':\'"

# NAVIGATOR --------------------------------------------------------------------
# navigator

NAVIGATOR:Feature: {
    display_name: qubit.cucumber.editor.Feature.featureName;
    icon: qubit.cucumber.editor.Feature.featureIcon;
}

NAVIGATOR:Scenario: {
    display_name: qubit.cucumber.editor.Feature.scenarioName;
    icon: qubit.cucumber.editor.Feature.scenarioIcon;
}

NAVIGATOR:ExamplesBlock: {
    display_name: qubit.cucumber.editor.Feature.examplesName;
    icon: qubit.cucumber.editor.Feature.examplesIcon;
}

NAVIGATOR:TableBlock: {
    display_name: qubit.cucumber.editor.Feature.tableName;
    icon: qubit.cucumber.editor.Feature.tableIcon;
}

NAVIGATOR:Background: {
    display_name: qubit.cucumber.editor.Feature.backgroundName;
    icon: qubit.cucumber.editor.Feature.backgroundIcon;
}

# INDENT -----------------------------------------------------------------------
# indentation
INDENT "Feature:.*"
#INDENT "Scenario:\\n\\n"
#INDENT "Background:<end_background>"

# COMMENT_LINE -----------------------------------------------------------------
COMMENT_LINE {
    prefix: "#";
}
# TOOLTIP ----------------------------------------------------------------------
#TOOLTIP:Feature:"Feature"
#TOOLTIP:Scenario:"Scenario"
#TOOLTIP:BusinessValueDefinition:"What is the Business Value of this Feature?"
#TOOLTIP:RoleDefinition:"Who are you or the person running this Scenarios?"
#TOOLTIP:SomeActionDefintion:"What do you do to reach this Goal?"

# FOLD -------------------------------------------------------------------------

FOLD:FeatureBlock
FOLD:BackgroundBlock
FOLD:ScenarioBlock
FOLD:TableBlock

# BUNDLE -----------------------------------------------------------------------
BUNDLE "qubit.cucumber.editor.Bundle"
# EOF --------------------------------------------------------------------------
