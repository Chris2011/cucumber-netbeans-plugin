# -> http://github.com/aslakhellesoy/gherkin-pygments-lexer/blob/master/gherkin_lexer/__init__.py
# NBS Template for FEATURE
#
# Author: Roland Guem
#
# HINT: Package name is a homage to Cucumber Developers
#
# TOKEN DEFINTIONS -------------------------------------------------------------
# COMMENT
TOKEN:comment:('#' [^ '\n' '\r']*)
# COLON
TOKEN:colon:(":"):<TEXT_MODE>
# ROW DELIMITER
TOKEN:row_delimiter:("|"):<ROW_MODE>
# MULTILINE STRING
TOKEN:pystring:('\"\"\"'):<PYSTRING_MODE>
# INFINITE
TOKEN:infinite:("*"):<STEPS_TEXT_MODE>
# STRING
TOKEN:string:((" \'"[^ "\'"]* "\'")|("\""[^ "\""]* "\""))
# VARIABLE
#TOKEN:variable:('<'[^ '>']* '>')
#TOKEN:examples_keywords:('예'|'例子'|'例'|'サンプル'|'امثلة'|'דוגמאות'|'Сценарији'|'Примери'|'Мисоллар'|'Значения'|'Örnekler'|'Voorbeelden'|'Variantai'|'Tapaukset'|'Scenarios'|'Scenariji'|'Scenarijai'|'Příklady'|'Példák'|'Príklady'|'Przykłady'|'Primjeri'|'Primeri'|'Piemēri'|'Pavyzdžiai'|'Paraugs'|'Juhtumid'|'Exemplos'|'Exemples'|'Exemplele'|'Exempel'|'Examples'|'Esempi'|'Enghreifftiau'|'Eksempler'|'Ejemplos'|'EXAMPLZ'|'Dữ liệu'|'Contoh'|'Cobber'|'Beispiele')
# CS - Czech
TOKEN:cs_feature:("Po"."adavek"):<FEATURE_NARRATIVE>
TOKEN:cs_background:("Pozad".|"Kontext")
TOKEN:cs_scenario:("Sc"."n"..)
TOKEN:cs_scenario_outline:("N".."rt Sc"."n".."e"|"Osnova sc"."n".."e")
TOKEN:cs_examples: ("P".."klady"):<EXAMPLES_MODE>
TOKEN:cs_given:("Pokud "):<STEPS_TEXT_MODE>
TOKEN:cs_when:("Kdy"." "):<STEPS_TEXT_MODE>
TOKEN:cs_then:("Pak "):<STEPS_TEXT_MODE>
TOKEN:cs_and:("A "|"A tak"." "):<STEPS_TEXT_MODE>
TOKEN:cs_but:("Ale "):<STEPS_TEXT_MODE>
# DA - Danish
TOKEN:da_feature:("Egenskab"):<FEATURE_NARRATIVE>
TOKEN:da_background:("Baggrund")
TOKEN:da_scenario:("Scenarie")
TOKEN:da_scenario_outline:("Abstrakt Scenario")
TOKEN:da_examples: ("Eksempler"):<EXAMPLES_MODE>
TOKEN:da_given:("Givet "):<STEPS_TEXT_MODE>
TOKEN:da_when:("N"."r "):<STEPS_TEXT_MODE>
TOKEN:da_then:("S"." "):<STEPS_TEXT_MODE>
TOKEN:da_and:("Og "):<STEPS_TEXT_MODE>
TOKEN:da_but:("Men "):<STEPS_TEXT_MODE>
# DE - German
TOKEN:de_feature:("Funktionalit"."t"):<FEATURE_NARRATIVE>
TOKEN:de_background:("Grundlage")
TOKEN:de_scenario:("Szenario")
TOKEN:de_scenario_outline:("Szenariogrundriss")
TOKEN:de_examples: ("Beispiele"):<EXAMPLES_MODE>
TOKEN:de_given:("Angenommen "|"Gegeben sei "):<STEPS_TEXT_MODE>
TOKEN:de_when:("Wenn "):<STEPS_TEXT_MODE>
TOKEN:de_then:("Dann "):<STEPS_TEXT_MODE>
TOKEN:de_and:("Und "):<STEPS_TEXT_MODE>
TOKEN:de_but:("Aber "):<STEPS_TEXT_MODE>
# EN - English
TOKEN:en_feature:("Feature"):<FEATURE_NARRATIVE>
TOKEN:en_background:("Background")
TOKEN:en_scenario:("Scenario")
TOKEN:en_scenario_outline:("Scenario Outline")
TOKEN:en_examples: ("Examples"|"Scenarios"):<EXAMPLES_MODE>
TOKEN:en_given:("Given"):<STEPS_TEXT_MODE>
TOKEN:en_when:("When"):<STEPS_TEXT_MODE>
TOKEN:en_then:("Then"):<STEPS_TEXT_MODE>
TOKEN:en_and:("And"):<STEPS_TEXT_MODE>
TOKEN:en_but:("But"):<STEPS_TEXT_MODE>
# ES - Spanish
TOKEN:es_feature:("Caracter"."stica"):<FEATURE_NARRATIVE>
TOKEN:es_background:("Antecedentes")
TOKEN:es_scenario:("Escenario")
TOKEN:es_scenario_outline:("Esquema del escenario")
TOKEN:es_examples: ("Ejemplos"):<EXAMPLES_MODE>
TOKEN:es_given:("Dado "):<STEPS_TEXT_MODE>
TOKEN:es_when:("Cuando "):<STEPS_TEXT_MODE>
TOKEN:es_then:("Entonces "):<STEPS_TEXT_MODE>
TOKEN:es_and:("Y "):<STEPS_TEXT_MODE>
TOKEN:es_but:("Pero "):<STEPS_TEXT_MODE>
# ET - Estonian
TOKEN:et_feature:("Omadus"):<FEATURE_NARRATIVE>
TOKEN:et_background:("Taust")
TOKEN:et_scenario:("Stsenaarium")
TOKEN:et_scenario_outline:("Raamstsenaarium")
TOKEN:et_examples: ("Juhtumid"):<EXAMPLES_MODE>
TOKEN:et_given:("Eeldades "):<STEPS_TEXT_MODE>
TOKEN:et_when:("Kui "):<STEPS_TEXT_MODE>
TOKEN:et_then:("Siis "):<STEPS_TEXT_MODE>
TOKEN:et_and:("Ja "):<STEPS_TEXT_MODE>
TOKEN:et_but:("Kuid "):<STEPS_TEXT_MODE>
# FI - Finnish
TOKEN:fi_feature:("Ominaisuus"):<FEATURE_NARRATIVE>
TOKEN:fi_background:("Tausta")
TOKEN:fi_scenario:("Tapaus")
TOKEN:fi_scenario_outline:("Tapausaihio")
TOKEN:fi_examples: ("Tapaukset"):<EXAMPLES_MODE>
TOKEN:fi_given:("Oletetaan"):<STEPS_TEXT_MODE>
TOKEN:fi_when:("Kun "):<STEPS_TEXT_MODE>
TOKEN:fi_then:("Niin "):<STEPS_TEXT_MODE>
TOKEN:fi_and:("Ja "):<STEPS_TEXT_MODE>
TOKEN:fi_but:("Mutta "):<STEPS_TEXT_MODE>
# FR - French
TOKEN:fr_feature:("Fonctionnalit".):<FEATURE_NARRATIVE>
TOKEN:fr_background:("Contexte")
TOKEN:fr_scenario:("Sc"."nario")
TOKEN:fr_scenario_outline:("Plan du sc"."nario"|"Plan du Sc"."nario")
TOKEN:fr_examples: ("Exemples"):<EXAMPLES_MODE>
TOKEN:fr_given:("Soit "|"Etant donn".):<STEPS_TEXT_MODE>
TOKEN:fr_when:("Quand "|"Lorsqu".):<STEPS_TEXT_MODE>
TOKEN:fr_then:("Alors "):<STEPS_TEXT_MODE>
TOKEN:fr_and:("Et "):<STEPS_TEXT_MODE>
TOKEN:fr_but:("Mais "):<STEPS_TEXT_MODE>
# HR - Croatian
TOKEN:hr_feature:("Osobina"|"Mogu"."nost"|"Mogucnost"):<FEATURE_NARRATIVE>
TOKEN:hr_background:("Pozadina")
TOKEN:hr_scenario:("Scenarij")
TOKEN:hr_scenario_outline:("Skica"|"Koncept")
TOKEN:hr_examples: ("Primjeri"|"Scenariji"):<EXAMPLES_MODE>
TOKEN:hr_given:("Zadan "|"Zadani "|"Zadano "):<STEPS_TEXT_MODE>
TOKEN:hr_when:("Kada "|"Kad "):<STEPS_TEXT_MODE>
TOKEN:hr_then:("Onda "):<STEPS_TEXT_MODE>
TOKEN:hr_and:("I "):<STEPS_TEXT_MODE>
TOKEN:hr_but:("Ali "):<STEPS_TEXT_MODE>
# HU - Hungarian
TOKEN:hu_feature:("Jellemz".):<FEATURE_NARRATIVE>
TOKEN:hu_background:("H"."tt"."r")
TOKEN:hu_scenario:("Forgat"."k"."nyv")
TOKEN:hu_scenario_outline:("Forgat"."k"."nyv v"."zlat")
TOKEN:hu_examples: ("P"."ld"."k"):<EXAMPLES_MODE>
TOKEN:hu_given:("Ha "):<STEPS_TEXT_MODE>
TOKEN:hu_when:("Majd "):<STEPS_TEXT_MODE>
TOKEN:hu_then:("Akkor "):<STEPS_TEXT_MODE>
TOKEN:hu_and:(."s "):<STEPS_TEXT_MODE>
TOKEN:hu_but:("De "):<STEPS_TEXT_MODE>
# ID - Indonesian
TOKEN:id_feature:("Fitur"):<FEATURE_NARRATIVE>
TOKEN:id_background:("Dasar")
TOKEN:id_scenario:("Skenario")
TOKEN:id_scenario_outline:("Skenario konsep")
TOKEN:id_examples: ("Contoh"):<EXAMPLES_MODE>
TOKEN:id_given:("Dengan "):<STEPS_TEXT_MODE>
TOKEN:id_when:("Ketika "):<STEPS_TEXT_MODE>
TOKEN:id_then:("Maka "):<STEPS_TEXT_MODE>
TOKEN:id_and:("Dan "):<STEPS_TEXT_MODE>
TOKEN:id_but:("Tapi "):<STEPS_TEXT_MODE>
# IT - Italian
TOKEN:it_feature:("Funzionalit".):<FEATURE_NARRATIVE>
TOKEN:it_background:("Contesto")
TOKEN:it_scenario:("Scenario")
TOKEN:it_scenario_outline:("Schema dello scenario")
TOKEN:it_examples: ("Esempi"):<EXAMPLES_MODE>
TOKEN:it_given:("Dato "):<STEPS_TEXT_MODE>
TOKEN:it_when:("Quando "):<STEPS_TEXT_MODE>
TOKEN:it_then:("Allora "):<STEPS_TEXT_MODE>
TOKEN:it_and:("E "):<STEPS_TEXT_MODE>
TOKEN:it_but:("Ma "):<STEPS_TEXT_MODE>
# LT - Lithuanian
TOKEN:lt_feature:("Savyb".):<FEATURE_NARRATIVE>
TOKEN:lt_background:("Kontekstas")
TOKEN:lt_scenario:("Scenarijus")
TOKEN:lt_scenario_outline:("Scenarijaus "."ablonas")
TOKEN:lt_examples: ("Pavyzd"."iai"|"Scenarijai"|"Variantai"):<EXAMPLES_MODE>
TOKEN:lt_given:("Duota "):<STEPS_TEXT_MODE>
TOKEN:lt_when:("Kai "):<STEPS_TEXT_MODE>
TOKEN:lt_then:("Tada "):<STEPS_TEXT_MODE>
TOKEN:lt_and:("Ir "):<STEPS_TEXT_MODE>
TOKEN:lt_but:("Bet "):<STEPS_TEXT_MODE>
# LV - Latvian
TOKEN:lv_feature:("Funkcionalit"."te"|"F".."a"):<FEATURE_NARRATIVE>
TOKEN:lv_background:("Konteksts"|"Situ"."cija")
TOKEN:lv_scenario:("Scen"."rijs")
TOKEN:lv_scenario_outline:("Scen"."rijs p"."c parauga")
TOKEN:lv_examples: ("Piem"."ri"|"Paraugs"):<EXAMPLES_MODE>
TOKEN:lv_given:("Kad "):<STEPS_TEXT_MODE>
TOKEN:lv_when:("Ja "):<STEPS_TEXT_MODE>
TOKEN:lv_then:("Tad "):<STEPS_TEXT_MODE>
TOKEN:lv_and:("Un "):<STEPS_TEXT_MODE>
TOKEN:lv_but:("Bet "):<STEPS_TEXT_MODE>
# NL - Dutch
TOKEN:nl_feature:("Functionaliteit"):<FEATURE_NARRATIVE>
TOKEN:nl_background:("Achtergrond")
TOKEN:nl_scenario:("Scenario")
TOKEN:nl_scenario_outline:("Abstract Scenario")
TOKEN:nl_examples: ("Voorbeelden"):<EXAMPLES_MODE>
TOKEN:nl_given:("Gegeven "|"Stel "):<STEPS_TEXT_MODE>
TOKEN:nl_when:("Als "):<STEPS_TEXT_MODE>
TOKEN:nl_then:("Dan "):<STEPS_TEXT_MODE>
TOKEN:nl_and:("En "):<STEPS_TEXT_MODE>
TOKEN:nl_but:("Maar "):<STEPS_TEXT_MODE>
# NO - Norwegian
TOKEN:no_feature:("Egenskap"):<FEATURE_NARRATIVE>
TOKEN:no_background:("Bakgrunn")
TOKEN:no_scenario:("Scenario")
TOKEN:no_scenario_outline:("Abstrakt Scenario")
TOKEN:no_examples: ("Eksempler"):<EXAMPLES_MODE>
TOKEN:no_given:("Gitt "):<STEPS_TEXT_MODE>
TOKEN:no_when:("Når "):<STEPS_TEXT_MODE>
TOKEN:no_then:("Så "):<STEPS_TEXT_MODE>
TOKEN:no_and:("Og "):<STEPS_TEXT_MODE>
TOKEN:no_but:("Men "):<STEPS_TEXT_MODE>
# PL - Polish
TOKEN:pl_feature:("W"."a"."ciwo"..):<FEATURE_NARRATIVE>
TOKEN:pl_background:("Za"."o"."enia")
TOKEN:pl_scenario:("Scenariusz")
TOKEN:pl_scenario_outline:("Szablon scenariusza")
TOKEN:pl_examples: ("Przyk"."ady"):<EXAMPLES_MODE>
TOKEN:pl_given:("Zak"."adaj"."c "):<STEPS_TEXT_MODE>
TOKEN:pl_when:("Je"."eli "):<STEPS_TEXT_MODE>
TOKEN:pl_then:("Wtedy "):<STEPS_TEXT_MODE>
TOKEN:pl_and:("Oraz "):<STEPS_TEXT_MODE>
TOKEN:pl_but:("Ale "):<STEPS_TEXT_MODE>
# PT - Portuguese
TOKEN:pt_feature:("Funcionalidade"):<FEATURE_NARRATIVE>
TOKEN:pt_background:("Contexto")
TOKEN:pt_scenario:("Cenario"| "Cen"."rio")
TOKEN:pt_scenario_outline:("Esquema do Cenario"|"Esquema do Cen"."rio")
TOKEN:pt_examples: ("Exemplos"):<EXAMPLES_MODE>
TOKEN:pt_given:("Dado "):<STEPS_TEXT_MODE>
TOKEN:pt_when:("Quando "):<STEPS_TEXT_MODE>
TOKEN:pt_then:("Entao "|"Ent"."o "):<STEPS_TEXT_MODE>
TOKEN:pt_and:("E "):<STEPS_TEXT_MODE>
TOKEN:pt_but:("Mas "):<STEPS_TEXT_MODE>
# RO - Romanian
TOKEN:ro_feature:("Functionalitate"):<FEATURE_NARRATIVE>
TOKEN:ro_background:("Conditii")
TOKEN:ro_scenario:("Scenariu")
TOKEN:ro_scenario_outline:("Scenariul de sablon")
TOKEN:ro_examples: ("Exemplele"):<EXAMPLES_MODE>
TOKEN:ro_given:("Daca "):<STEPS_TEXT_MODE>
TOKEN:ro_when:("Cand "):<STEPS_TEXT_MODE>
TOKEN:ro_then:("Atunci "):<STEPS_TEXT_MODE>
TOKEN:ro_and:("Si "):<STEPS_TEXT_MODE>
TOKEN:ro_but:("Dar "):<STEPS_TEXT_MODE>
# SE - Swedish
TOKEN:se_feature:("Egenskap"):<FEATURE_NARRATIVE>
TOKEN:se_background:("Bakgrund")
TOKEN:se_scenario:("Scenario")
TOKEN:se_scenario_outline:("Abstrakt Scenario")
TOKEN:se_examples: ("Exempel"):<EXAMPLES_MODE>
TOKEN:se_given:("Givet "):<STEPS_TEXT_MODE>
TOKEN:se_when:("När "):<STEPS_TEXT_MODE>
TOKEN:se_then:("Så "):<STEPS_TEXT_MODE>
TOKEN:se_and:("Och "):<STEPS_TEXT_MODE>
TOKEN:se_but:("Men "):<STEPS_TEXT_MODE>
# SK - Slovak
TOKEN:sk_feature:("Po"."iadavka"):<FEATURE_NARRATIVE>
TOKEN:sk_background:("Pozadie")
TOKEN:sk_scenario:("Scen"."r")
TOKEN:sk_scenario_outline:("N".."rt Scen"."ru")
TOKEN:sk_examples: ("Pr"."klady"):<EXAMPLES_MODE>
TOKEN:sk_given:("Pokia"." "):<STEPS_TEXT_MODE>
TOKEN:sk_when:("Ke"." "):<STEPS_TEXT_MODE>
TOKEN:sk_then:("Tak "):<STEPS_TEXT_MODE>
TOKEN:sk_and:("A "):<STEPS_TEXT_MODE>
TOKEN:sk_but:("Ale "):<STEPS_TEXT_MODE>
# TR - Turkish
TOKEN:tr_feature:(."zellik"):<FEATURE_NARRATIVE>
TOKEN:tr_background:("Ge"."mi".)
TOKEN:tr_scenario:("Senaryo")
TOKEN:tr_scenario_outline:("Senaryo tasla"..)
TOKEN:tr_examples: (."rnekler"):<EXAMPLES_MODE>
TOKEN:tr_given:("Diyelim ki "):<STEPS_TEXT_MODE>
TOKEN:tr_when:("E"."er ki "):<STEPS_TEXT_MODE>
TOKEN:tr_then:("O zaman "):<STEPS_TEXT_MODE>
TOKEN:tr_and:("Ve "):<STEPS_TEXT_MODE>
TOKEN:tr_but:("Fakat "|"Ama "):<STEPS_TEXT_MODE>
# VI - Vietnamese
TOKEN:vi_feature:("T"."nh n"."ng"):<FEATURE_NARRATIVE>
TOKEN:vi_background:("B"."i c"."nh")
TOKEN:vi_scenario:("T"."nh hu"."ng|K"."ch b"."n")
TOKEN:vi_scenario_outline:("Khung t"."nh hu"."ng|Khung k"."ch b"."n")
TOKEN:vi_examples: ("D"." li"."u"):<EXAMPLES_MODE>
TOKEN:vi_given:("Bi"."t "|"Cho "):<STEPS_TEXT_MODE>
TOKEN:vi_when:("Khi "):<STEPS_TEXT_MODE>
TOKEN:vi_then:("Th"." "):<STEPS_TEXT_MODE>
TOKEN:vi_and:("V"." "):<STEPS_TEXT_MODE>
TOKEN:vi_but:("Nh"."ng "):<STEPS_TEXT_MODE>

TOKEN:word:( [^ '\n' '\r' '\t' ' ' '\"' '<' '>' '|' '#' ':' '@']* )
TOKEN:tag:('@' [^ ' ' '\t' '\n' '\r']*)
TOKEN:whitespace:( [" " "\t"]+ ) # "\n" "\r"
TOKEN:newline: ('\n')

# TEXT -------------------------------------------------------------------------
<FEATURE_NARRATIVE> {
    TOKEN:colon:(':')
    TOKEN:newline:('\n'):<CHECK_DOUBLE_NL>
    TOKEN:whitespace:( [" " "\t"]+ )
    TOKEN:comment:('#' [^ '\n' '\r']*)
    TOKEN:word:( [^ ':' '\n' '\r' '\t' '#']* )
}
# FORCE DOUBLE NL AFTER FEATURE NARRATIVE
<CHECK_DOUBLE_NL> {
    TOKEN:newline:('\n'):<DEFAULT>
    TOKEN:whitespace:( [" " "\t"]+ )
    TOKEN:comment:('#' [^ '\n' '\r']*)
    TOKEN:word:([^'\n']*):<FEATURE_NARRATIVE>
}
# Examples
<EXAMPLES_MODE> {
    TOKEN:colon:(':'):<EXAMPLES_TEXT_MODE>
}
<EXAMPLES_TEXT_MODE> {
    TOKEN:row_delimiter:('|'):<ROW_MODE>
    TOKEN:newline:('\n')
    TOKEN:whitespace:( [" " "\t"]+ )
    TOKEN:comment:('#' [^ '\n' '\r']*)
    TOKEN:word:([^'|' '#']*)
}
# Text
<TEXT_MODE> {
    TOKEN:newline:('\n'):<DEFAULT>
    TOKEN:whitespace:( [" " "\t"]+ )
    TOKEN:comment:('#' [^ '\n' '\r']*)
    TOKEN:word:( [^ '\n' '\r' '\t' '#']* )
}

# STEPSTEXT --------------------------------------------------------------------
# Text inside Steps
<STEPS_TEXT_MODE> {
    TOKEN:newline:('\n'):<DEFAULT>
    TOKEN:whitespace:( [" " "\t"]+ )
    TOKEN:string:((" \'"[^ "\'"]* "\'")|("\""[^ "\""]* "\""))
    TOKEN:variable:('<'[^ '>']* '>')
    TOKEN:number:( ["0"-"9"]+ (("."|",")["0"-"9"]*)? )
    TOKEN:comment:('#' [^ '\n' '\r']*)
    TOKEN:word:( [^ '\n' '\r' '\t' ' ' '\"' '<' '>' '#']* )
}

# PYSTRING ---------------------------------------------------------------------
# Multiline String
<PYSTRING_MODE> {
    TOKEN:end_pystring:('\"\"\"'):<DEFAULT>
    TOKEN:newline: ('\n')
    TOKEN:whitespace:( [" " "\t"]+ )
    TOKEN:variable:('<'[^ '>']* '>')
    TOKEN:word:( [^ '\n' '\r' '\t' ' ' '<' '>']* )
}

# ROW --------------------------------------------------------------------------
# Row
<ROW_MODE> {
    TOKEN:end: ('\n'):<DEFAULT>
    TOKEN:row_delimiter:("|")
    TOKEN:whitespace:( [" " "\t"]+ )
    TOKEN:string:((" \'"[^ "\'"]* "\'")|("\""[^ "\""]* "\""))
    TOKEN:comment:('#' [^ '\n' '\r']*)
    TOKEN:number:( ["0"-"9"]+ (("."|",")["0"-"9"]*)? )
    TOKEN:word:( [^ '\n' '\r' '\t' ' ' '\"' '|' '#']* )
}
#
# GRAMMER RULES :: SYNTAX DEFINITION -------------------------------------------
#
# 0..* Features are in one File (restrict to 1)
S = (Feature)*;
# Feature
Feature = FeatureDefinition BackgroundPart ScenarioPart;
BackgroundPart = (Background)*;
ScenarioPart = (Scenario)*;
FeatureDefinition = FeatureIdentifier <colon> [FeatureDescription];
FeatureDescription = Text;
# Background
Background = BackgroundIdentifier <colon> [Description] [BackgroundBlock];

# a Background has only Given Statments
BackgroundBlock = (Statements)*;
# Scenario
Scenario = BasicScenario | TableScenario;
BasicScenario = ScenarioIdentifier <colon> [ScenarioDescription] ScenarioBlock;
TableScenario = ScenarioOutlineIdentifier <colon> [ScenarioDescription] ScenarioBlock ExamplesBlocks;
ScenarioDescription = Text;
# Scenario Block
#ScenarioBlock = [GivenStatement] [WhenStatement] [ThenStatement];
# freedom of choice
ScenarioBlock = (Statements)*;
Statements = StatementIdentfier Statement;
StatementIdentfier = (<infinite> | GivenIdentifier | WhenIdentifier |ThenIdentifier | AndIdentifier | ButIdentifier );
# Given
# Statement is more or less Text followed by Extras if necessary
Statement = Text [Extras];
#Extras
Extras = PyString | TableBlock;
# Examples and Tables
ExamplesBlocks = ExamplesBlock (ExamplesBlock)*;
ExamplesBlock = ExamplesIdentifier <colon> [Description] TableBlock;
Description = Text;
TableBlock = TableHeader TableRows;
TableHeader = Row;
TableRows = (Row)*;
Row = <row_delimiter> ([Text] <row_delimiter>)+ <end>;
#
PyString = <pystring> Text <end_pystring>;
# Text
Text = (Word | <string> | <variable>) (Text)*;
Word = <word> | <number> ;
################################################################################
FeatureIdentifier = <en_feature>
                  |<cs_feature>
                  |<da_feature>
                  |<de_feature>
                  |<et_feature>
                  |<es_feature>
                  |<fi_feature>
                  |<fr_feature>
                  |<hr_feature>
                  |<hu_feature>
                  |<id_feature>
                  |<it_feature>
                  |<lt_feature>
                  |<lv_feature>
                  |<nl_feature>
                  |<no_feature>
                  |<pt_feature>
                  |<pl_feature>
                  |<ro_feature>
                  |<se_feature>
                  |<sk_feature>
                  |<tr_feature>
                  |<vi_feature>
                  ;
BackgroundIdentifier = <en_background>
                  |<cs_background>
                  |<da_background>
                  |<de_background>
                  |<et_background>
                  |<es_background>
                  |<fi_background>
                  |<fr_background>
                  |<hr_background>
                  |<hu_background>
                  |<id_background>
                  |<it_background>
                  |<lt_background>
                  |<lv_background>
                  |<nl_background>
                  |<no_background>
                  |<pt_background>
                  |<pl_background>
                  |<ro_background>
                  |<se_background>
                  |<sk_background>
                  |<tr_background>
                  |<vi_background>
                  ;
ScenarioIdentifier = <en_scenario>
                  |<cs_scenario>
                  |<da_scenario>
                  |<de_scenario>
                  |<et_scenario>
                  |<es_scenario>
                  |<fi_scenario>
                  |<fr_scenario>
                  |<hr_scenario>
                  |<hu_scenario>
                  |<id_scenario>
                  |<it_scenario>
                  |<lt_scenario>
                  |<lv_scenario>
                  |<nl_scenario>
                  |<no_scenario>
                  |<pt_scenario>
                  |<pl_scenario>
                  |<ro_scenario>
                  |<se_scenario>
                  |<sk_scenario>
                  |<tr_scenario>
                  |<vi_scenario>
                  ;
ScenarioOutlineIdentifier = <en_scenario_outline>
                  |<cs_scenario_outline>
                  |<da_scenario_outline>
                  |<de_scenario_outline>
                  |<et_scenario_outline>
                  |<es_scenario_outline>
                  |<fi_scenario_outline>
                  |<fr_scenario_outline>
                  |<hr_scenario_outline>
                  |<hu_scenario_outline>
                  |<id_scenario_outline>
                  |<it_scenario_outline>
                  |<lt_scenario_outline>
                  |<lv_scenario_outline>
                  |<nl_scenario_outline>
                  |<no_scenario_outline>
                  |<pt_scenario_outline>
                  |<pl_scenario_outline>
                  |<ro_scenario_outline>
                  |<se_scenario_outline>
                  |<sk_scenario_outline>
                  |<tr_scenario_outline>
                  |<vi_scenario_outline>
                  ;
GivenIdentifier = <en_given>
                  |<cs_given>
                  |<da_given>
                  |<de_given>
                  |<et_given>
                  |<es_given>
                  |<fi_given>
                  |<fr_given>
                  |<hr_given>
                  |<hu_given>
                  |<id_given>
                  |<it_given>
                  |<lt_given>
                  |<lv_given>
                  |<nl_given>
                  |<no_given>
                  |<pt_given>
                  |<pl_given>
                  |<ro_given>
                  |<se_given>
                  |<sk_given>
                  |<tr_given>
                  |<vi_given>
                  ;
AndIdentifier = <en_and>
                  |<cs_and>
                  |<da_and>
                  |<de_and>
                  |<et_and>
                  |<es_and>
                  |<fi_and>
                  |<fr_and>
                  |<hr_and>
                  |<hu_and>
                  |<id_and>
                  |<it_and>
                  |<lt_and>
                  |<lv_and>
                  |<nl_and>
                  |<no_and>
                  |<pt_and>
                  |<pl_and>
                  |<ro_and>
                  |<se_and>
                  |<sk_and>
                  |<tr_and>
                  |<vi_and>
                  ;
WhenIdentifier = <en_when>
                  |<cs_when>
                  |<da_when>
                  |<de_when>
                  |<et_when>
                  |<es_when>
                  |<fi_when>
                  |<fr_when>
                  |<hr_when>
                  |<hu_when>
                  |<id_when>
                  |<it_when>
                  |<lt_when>
                  |<lv_when>
                  |<nl_when>
                  |<no_when>
                  |<pt_when>
                  |<pl_when>
                  |<ro_when>
                  |<se_when>
                  |<sk_when>
                  |<tr_when>
                  |<vi_when>
                  ;
ThenIdentifier = <en_then>
                  |<cs_then>
                  |<da_then>
                  |<de_then>
                  |<et_then>
                  |<es_then>
                  |<fi_then>
                  |<fr_then>
                  |<hr_then>
                  |<hu_then>
                  |<id_then>
                  |<it_then>
                  |<lt_then>
                  |<lv_then>
                  |<nl_then>
                  |<no_then>
                  |<pt_then>
                  |<pl_then>
                  |<ro_then>
                  |<se_then>
                  |<sk_then>
                  |<tr_then>
                  |<vi_then>
                  ;
ButIdentifier = <en_but>
                  |<cs_but>
                  |<da_but>
                  |<de_but>
                  |<et_but>
                  |<es_but>
                  |<fi_but>
                  |<fr_but>
                  |<hr_but>
                  |<hu_but>
                  |<id_but>
                  |<it_but>
                  |<lt_but>
                  |<lv_but>
                  |<nl_but>
                  |<no_but>
                  |<pt_but>
                  |<pl_but>
                  |<ro_but>
                  |<se_but>
                  |<sk_but>
                  |<tr_but>
                  |<vi_but>
                  ;
ExamplesIdentifier = <en_examples>
                  |<cs_examples>
                  |<da_examples>
                  |<de_examples>
                  |<et_examples>
                  |<es_examples>
                  |<fi_examples>
                  |<fr_examples>
                  |<hr_examples>
                  |<hu_examples>
                  |<id_examples>
                  |<it_examples>
                  |<lt_examples>
                  |<lv_examples>
                  |<nl_examples>
                  |<no_examples>
                  |<pt_examples>
                  |<pl_examples>
                  |<ro_examples>
                  |<se_examples>
                  |<sk_examples>
                  |<tr_examples>
                  |<vi_examples>
                  ;
 
################################################################################
SKIP:whitespace
SKIP:comment
SKIP:newline
SKIP:tag
# ------------------------------------------------------------------------------
#
COLOR:comment: {
    default_coloring: "identifier";
    foreground_color:"#8F8F8F";
}
COLOR:tag: {
    default_coloring: "identifier";
    foreground_color:"#CC3333";
    font_type: "bold";
}
#
# COLOR FOR FEATURE ------------------------------------------------------------
#
COLOR:FeatureIdentifier: {
    default_coloring: "identifier";
    foreground_color: "#3366CC";
    font_type: "bold italic";
}
COLOR:FeatureDescription: {
    font_type: "bold";
}
#
# COLOR FOR SCENARIO -----------------------------------------------------------
#
COLOR:ScenarioIdentifier: {
    default_coloring: "identifier";
    foreground_color: "#3366CC";
    font_type: "bold italic";
}
COLOR:ScenarioOutlineIdentifier: {
    default_coloring: "identifier";
    foreground_color: "#3366CC";
    font_type: "bold italic";
}
COLOR:ScenarioDescription: {
    font_type: "bold";
}
COLOR:TableHeader: {
    default_coloring: "identifier";
    foreground_color:"#336600";
    font_type: "bold";
}
COLOR:ExamplesIdentifier: {
    default_coloring: "identifier";
    foreground_color: "#336600";
    font_type: "bold italic";
}
#
# COLOR FOR BACKGROUND ---------------------------------------------------------
#
COLOR:BackgroundIdentifier: {
    default_coloring: "identifier";
    foreground_color: "#336600";
    font_type: "bold italic";
}
#
# Multiline String -------------------------------------------------------------
#
COLOR:PyString: {
    default_coloring: "identifier";
    foreground_color: "#663333";
}
#
# COLOR FOR GIVEN/WHEN/THEN & AND/BUT ----------------------------------------------
#
COLOR:GivenIdentifier: {
    default_coloring: "identifier";
    foreground_color: "#3366CC";
}
COLOR:WhenIdentifier: {
    default_coloring: "identifier";
    foreground_color: "#3366CC";
}
COLOR:ThenIdentifier: {
    default_coloring: "identifier";
    foreground_color: "#3366CC";
}
COLOR:AndIdentifier: {
    default_coloring: "identifier";
    foreground_color: "#3366CC";
}
COLOR:ButIdentifier: {
    default_coloring: "identifier";
    foreground_color: "#3366CC";
}
#
# ------------------------------------------------------------------------------
#
COLOR:variable: {
    default_coloring: "string";
    foreground_color: "#336600";
}
#
COLOR:number: {
    default_coloring: "string";
    foreground_color: "#336600";
}
#
COLOR:string: {
    default_coloring: "string";
    foreground_color: "#FF9900";
}
#
# COMPLETE ---------------------------------------------------------------------
# brace completion
COMPLETE "{:}"
COMPLETE "(:)"
COMPLETE "[:]"
COMPLETE "\":\""
COMPLETE "\':\'"

# COMPLETION -------------------------------------------------------------------
# code completion
#COMPLETION:given, when, then, and, scenario, feature, whitespace, newline: {
#    text1:"Feature:";
#    text2:"In order to";
#    text3:"As a";
#    text4:"I want to";
#    text5:"Scenario:";
#    text6:"Given";
#    text7:"And";
#    text8:"When";
#    text9:"Then";
#    text10:"But";
#    text11:"Examples:";
#    text12:"Background:";
#    text13:"Scenario Outline:";
#}

# BRACE ------------------------------------------------------------------------
# brace matching
BRACE "{:}"
BRACE "(:)"
BRACE "[:]"
BRACE "\":\""
BRACE "\':\'"

# NAVIGATOR --------------------------------------------------------------------
# navigator

NAVIGATOR:Feature: {
    display_name: info.cukes.feature.Feature.featureName;
    icon: info.cukes.feature.Feature.featureIcon;
}

NAVIGATOR:Scenario: {
    display_name: info.cukes.feature.Feature.scenarioName;
    icon: info.cukes.feature.Feature.scenarioIcon;
}

NAVIGATOR:ExamplesBlock: {
    display_name: info.cukes.feature.Feature.examplesName;
    icon: info.cukes.feature.Feature.examplesIcon;
}

NAVIGATOR:TableBlock: {
    display_name: info.cukes.feature.Feature.tableName;
    icon: info.cukes.feature.Feature.tableIcon;
}

NAVIGATOR:Background: {
    display_name: info.cukes.feature.Feature.backgroundName;
    icon: info.cukes.feature.Feature.backgroundIcon;
}

# INDENT -----------------------------------------------------------------------
# indentation
INDENT "Feature:.*"
#INDENT "Scenario:\\n\\n"
#INDENT "Background:<end_background>"

# COMMENT_LINE -----------------------------------------------------------------
COMMENT_LINE {
    prefix: "#";
}
# TOOLTIP ----------------------------------------------------------------------
#TOOLTIP:Feature:"Feature"
#TOOLTIP:Scenario:"Scenario"
#TOOLTIP:BusinessValueDefinition:"What is the Business Value of this Feature?"
#TOOLTIP:RoleDefinition:"Who are you or the person running this Scenarios?"
#TOOLTIP:SomeActionDefintion:"What do you do to reach this Goal?"

# FOLD -------------------------------------------------------------------------

FOLD:FeatureBlock
FOLD:BackgroundBlock
FOLD:ScenarioBlock
FOLD:TableBlock

# BUNDLE -----------------------------------------------------------------------
BUNDLE "info.cukes.feature.Bundle"
# EOF --------------------------------------------------------------------------
